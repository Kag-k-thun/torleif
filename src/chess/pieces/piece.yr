mod chess::pieces::piece;

import std::io;

pub enum
| WHITE = 0u8
| BLACK = 1u8
 -> Color;

pub class @abstract Piece {

    prot let _color: Color;

    pub self (color: Color) with _color = color {}
    pub fn draw(self);


    impl Streamable {
        pub  over toStream (self, dmut stream : &StringStream) {
            stream:.write (self::typeinfo.name);
        }
    }
}
